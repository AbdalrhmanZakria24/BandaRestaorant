// <auto-generated />
using System;
using BandaRestaorant.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BandaRestaorant.Migrations
{
    [DbContext(typeof(ApplicationDBContext))]
    partial class ApplicationDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BandaRestaorant.Models.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.HasKey("Id");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("BandaRestaorant.Models.Menu", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Catogre")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("Menus");
                });

            modelBuilder.Entity("BandaRestaorant.Models.MenuOrder", b =>
                {
                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<int>("MenuId")
                        .HasColumnType("int");

                    b.HasKey("OrderId", "MenuId");

                    b.HasIndex("MenuId");

                    b.ToTable("MenuOrders");
                });

            modelBuilder.Entity("BandaRestaorant.Models.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<int?>("MenuId")
                        .HasColumnType("int");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("OrderTime")
                        .HasColumnType("datetime2");

                    b.Property<double>("TotalPrice")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("MenuId");

                    b.ToTable("Orders");

                    b.UseTptMappingStrategy();
                });

            modelBuilder.Entity("BandaRestaorant.Models.Payment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<DateTime>("PaymentDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("OrderId")
                        .IsUnique();

                    b.ToTable("Payments");
                });

            modelBuilder.Entity("BandaRestaorant.Models.Delivery", b =>
                {
                    b.HasBaseType("BandaRestaorant.Models.Order");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.ToTable("Deliveries", (string)null);
                });

            modelBuilder.Entity("BandaRestaorant.Models.InRestaorant", b =>
                {
                    b.HasBaseType("BandaRestaorant.Models.Order");

                    b.Property<int>("TableNumber")
                        .HasColumnType("int");

                    b.ToTable("InRestaorants", (string)null);
                });

            modelBuilder.Entity("BandaRestaorant.Models.TakeAway", b =>
                {
                    b.HasBaseType("BandaRestaorant.Models.Order");

                    b.Property<DateTime>("PickupTime")
                        .HasColumnType("datetime2");

                    b.ToTable("TakeAways", (string)null);
                });

            modelBuilder.Entity("BandaRestaorant.Models.MenuOrder", b =>
                {
                    b.HasOne("BandaRestaorant.Models.Menu", "Menu")
                        .WithMany("MenuOrders")
                        .HasForeignKey("MenuId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BandaRestaorant.Models.Order", "Order")
                        .WithMany("MenuOrders")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Menu");

                    b.Navigation("Order");
                });

            modelBuilder.Entity("BandaRestaorant.Models.Order", b =>
                {
                    b.HasOne("BandaRestaorant.Models.Customer", "Customer")
                        .WithMany("Orders")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BandaRestaorant.Models.Menu", null)
                        .WithMany("Orders")
                        .HasForeignKey("MenuId");

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("BandaRestaorant.Models.Payment", b =>
                {
                    b.HasOne("BandaRestaorant.Models.Order", "Order")
                        .WithOne("Payment")
                        .HasForeignKey("BandaRestaorant.Models.Payment", "OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");
                });

            modelBuilder.Entity("BandaRestaorant.Models.Delivery", b =>
                {
                    b.HasOne("BandaRestaorant.Models.Order", null)
                        .WithOne()
                        .HasForeignKey("BandaRestaorant.Models.Delivery", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BandaRestaorant.Models.InRestaorant", b =>
                {
                    b.HasOne("BandaRestaorant.Models.Order", null)
                        .WithOne()
                        .HasForeignKey("BandaRestaorant.Models.InRestaorant", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BandaRestaorant.Models.TakeAway", b =>
                {
                    b.HasOne("BandaRestaorant.Models.Order", null)
                        .WithOne()
                        .HasForeignKey("BandaRestaorant.Models.TakeAway", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BandaRestaorant.Models.Customer", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("BandaRestaorant.Models.Menu", b =>
                {
                    b.Navigation("MenuOrders");

                    b.Navigation("Orders");
                });

            modelBuilder.Entity("BandaRestaorant.Models.Order", b =>
                {
                    b.Navigation("MenuOrders");

                    b.Navigation("Payment")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
